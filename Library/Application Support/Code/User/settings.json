{
  "[dockerfile]": {
    "editor.defaultFormatter": "ms-azuretools.vscode-docker"
  },
  "[html]": {
    "editor.defaultFormatter": "vscode.html-language-features"
  },
  "[javascript]": {
    "editor.defaultFormatter": "vscode.typescript-language-features"
  },
  "[json]": {
    "editor.defaultFormatter": "vscode.json-language-features"
  },
  "[jsonc]": {
    "editor.defaultFormatter": "vscode.json-language-features"
  },
  "[python]": {
    "editor.defaultFormatter": "ms-python.black-formatter",
    "editor.formatOnType": true
  },
  "[terraform]": {},
  "[typescript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[yaml]": {
    "editor.defaultFormatter": "redhat.vscode-yaml",
  },
  "yaml.validate": false,
  "editor.accessibilitySupport": "off",
  "editor.fontFamily": "Menlo, Monaco, 'Courier New', monospace, MesloLGS NF",
  "editor.formatOnSave": true,
  "editor.inlineSuggest.enabled": true,
  "editor.largeFileOptimizations": false,
  "editor.minimap.enabled": false,
  "editor.wordSeparators": "`~!@#$%^&*()-_=+[{]}\\|;:'\",.<>/?",
  "files.associations": {
    "*.jinja": "jinja",
    "*.yaml": "yaml"
  },
  "git.autofetch": true,
  "git.confirmSync": false,
  "github.copilot.enable": {
    "*": true,
    "plaintext": false,
    "markdown": true,
    "scminput": false,
    "yaml": true
  },
  "json.schemas": [],
  "redhat.telemetry.enabled": false,
  "terminal.integrated.defaultProfile.osx": "zsh",
  "terminal.integrated.env.osx": {
    "FIG_NEW_SESSION": "1",
    "CW_NEW_SESSION": "1"
  },
  "terraform.experimentalFeatures.prefillRequiredFields": true,
  "vim.enableNeovim": true,
  "vim.foldfix": true,
  "vim.hlsearch": true,
  "vim.leader": " ",
  "vim.neovimPath": "/usr/local/bin/nvim",
  "vim.normalModeKeyBindingsNonRecursive": [
    // fold all
    {
      "before": [
        "<leader>",
        "z"
      ],
      "commands": [
        "editor.foldAll"
      ]
    },
    // unfold all
    {
      "before": [
        "<leader>",
        "Z"
      ],
      "commands": [
        "editor.unfoldAll"
      ]
    },
    // fold except selected
    {
      "before": [
        "z",
        "c"
      ],
      "commands": [
        "editor.foldAllExcept"
      ]
    },
    // Jump to a diagnostic
    {
      "before": [
        "]",
        "d"
      ],
      "commands": [
        "editor.action.marker.nextInFiles"
      ],
    },
    {
      "before": [
        "[",
        "d"
      ],
      "commands": [
        "editor.action.marker.prevInFiles"
      ],
    },
    // Jump to a change in the file
    {
      "before": [
        "]",
        "c"
      ],
      "commands": [
        "workbench.action.editor.nextChange"
      ],
    },
    {
      "before": [
        "[",
        "c"
      ],
      "commands": [
        "workbench.action.editor.previousChange"
      ],
    },
    // Find references
    {
      "before": [
        "g",
        "r"
      ],
      "commands": [
        "editor.action.goToReferences"
      ]
    },
    // Jump to type definition
    {
      "before": [
        "<leader>",
        "D"
      ],
      "commands": [
        "editor.action.goToTypeDefinition"
      ]
    },
    {
      "before": [
        "<leader>",
        " "
      ],
      "commands": [
        "workbench.action.showCommands"
      ]
    },
    {
      "before": [
        "<leader>",
        "b"
      ],
      "commands": [
        "workbench.action.toggleSidebarVisibility"
      ]
    },
    {
      "before": [
        "<space>",
        "s"
      ],
      "commands": [
        "workbench.action.files.save"
      ]
    },
    {
      "before": [
        "<leader>",
        "q"
      ],
      "commands": [
        "workbench.action.closeActiveEditor"
      ]
    },
    {
      "before": [
        "<leader>",
        "Q"
      ],
      "commands": [
        "workbench.action.closeOtherEditors"
      ]
    },
    {
      "before": [
        "<leader>",
        "o"
      ],
      "commands": [
        "workbench.action.showAllEditors"
      ]
    },
    {
      "before": [
        "<leader>",
        "["
      ],
      "commands": [
        "workbench.action.navigateBack"
      ]
    },
    {
      "before": [
        "<leader>",
        "]"
      ],
      "commands": [
        "workbench.action.navigateForward"
      ]
    },
    {
      "before": [
        "<leader>",
        "f"
      ],
      "commands": [
        "revealInExplorer",
      ],
    },
    {
      "before": [
        "<leader>",
        "g"
      ],
      "commands": [
        "lazygit.openLazygit"
      ]
    },
    {
      "before": [
        "<leader>",
        "m"
      ],
      "commands": [
        "workbench.action.toggleMaximizeEditorGroup"
      ]
    }
  ],
  "vim.smartRelativeLine": true,
  "vim.useSystemClipboard": true,
  "vim.visualModeKeyBindings": [
    {
      "before": [
        "J"
      ],
      "commands": [
        "editor.action.moveLinesDownAction"
      ]
    },
    {
      "before": [
        "K"
      ],
      "commands": [
        "editor.action.moveLinesUpAction"
      ]
    },
  ],
  "workbench.editorAssociations": {
    "*.py": "default"
  },
  "workbench.startupEditor": "none",
  "yaml.customTags": [
    "!And",
    "!And sequence",
    "!If",
    "!If sequence",
    "!Not",
    "!Not sequence",
    "!Equals",
    "!Equals sequence",
    "!Or",
    "!Or sequence",
    "!FindInMap",
    "!FindInMap sequence",
    "!Base64",
    "!Join",
    "!Join sequence",
    "!Cidr",
    "!Ref",
    "!Sub",
    "!Sub sequence",
    "!GetAtt",
    "!GetAZs",
    "!ImportValue",
    "!ImportValue sequence",
    "!Select",
    "!Select sequence",
    "!Split",
    "!Split sequence"
  ],
  "diffEditor.ignoreTrimWhitespace": false,
  "[arm-template]": {
    "editor.defaultFormatter": "msazurermtools.azurerm-vscode-tools"
  },
  "extensions.ignoreRecommendations": true,
  "window.autoDetectColorScheme": true,
  "extensions.experimental.affinity": {
    "asvetliakov.vscode-neovim": 1
  },
  "workbench.colorTheme": "Default Light+",
  "workbench.editor.showTabs": "single",
  "workbench.activityBar.location": "bottom",
  "workbench.preferredLightColorTheme": "Solarized Light"
}